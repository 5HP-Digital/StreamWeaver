// <auto-generated />
using System;
using IPTV.PlaylistManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IPTV.PlaylistManager.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601224321_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IPTV.PlaylistManager.Data.PlaylistSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_playlist_sources");

                    b.ToTable("playlist_sources", (string)null);
                });

            modelBuilder.Entity("IPTV.PlaylistManager.Data.PlaylistSourceInvocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("playlist_source_id")
                        .HasColumnType("bigint")
                        .HasColumnName("playlist_source_id");

                    b.HasKey("Id")
                        .HasName("pk_playlist_source_invocations");

                    b.HasIndex("playlist_source_id")
                        .HasDatabaseName("ix_playlist_source_invocations_playlist_source_id");

                    b.ToTable("playlist_source_invocations", (string)null);
                });

            modelBuilder.Entity("IPTV.PlaylistManager.Data.PlaylistSourceInvocation", b =>
                {
                    b.HasOne("IPTV.PlaylistManager.Data.PlaylistSource", null)
                        .WithMany("Invocations")
                        .HasForeignKey("playlist_source_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_playlist_source_invocations_playlist_sources_playlist_sourc");
                });

            modelBuilder.Entity("IPTV.PlaylistManager.Data.PlaylistSource", b =>
                {
                    b.Navigation("Invocations");
                });
#pragma warning restore 612, 618
        }
    }
}
